<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd">
			
<!-- 		CustomAccessDeniedHandler Class를 bean으로 등록 			 -->
<bean id="customAccessDenied" class="com.youngtvjobs.ycc.member.security.CustomAccessDeniedHandler"></bean>
<!-- 		CustomLoginSuccessHandler Class를 bean으로 등록 			 -->
<bean id="customLoginSuccess" class="com.youngtvjobs.ycc.member.security.CustomLoginSuccessHandler"></bean>
<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
<bean id="customUserDetailsService" class="com.youngtvjobs.ycc.member.security.CustomUserDetailsService"></bean>
<bean id="CustomUserLoginFailHandler" class="com.youngtvjobs.ycc.member.security.CustomLoginFailHandler"></bean>

	<security:http>
			<!-- intercept-url: 특정 url 패턴은 권한이 있어야 허용 설정  -->
		<security:intercept-url pattern="/" access="permitAll"/>
		<security:intercept-url pattern="/mypage/pwcheck" access="isAuthenticated()"/>
		<security:intercept-url pattern="/mypage/forget" access="permitAll"/>
		<security:intercept-url pattern="/mypage/inquiry/**" access="hasAnyRole('ROLE_MEMBER','ROLE_ADMIN')"/>
		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/board/notice" access="permitAll" />
		<security:intercept-url pattern="/board/event" access="permitAll" />
		<security:intercept-url pattern="/board/write" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/board/remove" access="isAuthenticated()" />
		<security:intercept-url pattern="/board/edit" access="isAuthenticated()" />
		<security:intercept-url pattern="/course/search" access="permitAll" />
		<security:intercept-url pattern="/course/**" access="isAuthenticated()" />
		<security:intercept-url pattern="/rental/locker/info" access="permitAll" />
		<security:intercept-url pattern="/rental/locker" access="permitAll" />
		<security:intercept-url pattern="/rental/locker/reservation" access="isAuthenticated()" />
		<security:intercept-url pattern="/rental/studyroom" access="isAuthenticated()" />
		<security:intercept-url pattern="/rental/place" access="isAuthenticated()" />
		<!-- <security:intercept-url pattern="/rental/place/do" access="isAuthenticated()" /> -->
		<security:intercept-url pattern="/search/**" access="permitAll" />
		<security:intercept-url pattern="/club/**" access="isAuthenticated()" />
		<security:intercept-url pattern="/club" access="permitAll" />
		
		<!-- 접근 후 에러페이지  -->
		<security:access-denied-handler ref="customAccessDenied"/>
		<!-- 로그인페이지 -->
		<security:form-login login-page="/login" authentication-success-handler-ref="customLoginSuccess" /> 
		<!-- 자동로그인 30일 설정 -->
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="2592000"/>
		<!-- 로그아웃 URI지정, 로그아웃을 했을 때 세션 무효화 설정 , 자동로그인 쿠키 삭제  -->
		<security:logout logout-url="/logout" invalidate-session="true" delete-cookies="remember-me, JSESSION_ID" />

		
	</security:http>
	
	<security:authentication-manager >
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<security:password-encoder ref="bcryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
